import 'package:build/build.dart';
import 'dart:io';

class DBInjector implements Builder {
  @override
  final buildExtensions = const {
    'lib/models/stubs/{{}}.dart': ['lib/models/generated/{{}}.dart'],
  };

  @override
  Future<void> build(BuildStep buildStep) async {
    var inputId = buildStep.inputId;
    var file = inputId.pathSegments.last;
    var entity = file.substring(1, file.length - 5);
    var target = AssetId("eorla", "lib/models/generated/_$entity.dart");
    var stub = await buildStep.readAsString(inputId);
    var dbFile = File("database/$entity.enumvariants");
    String content = "// THIS FILE IS AUTOMATICALLY GENERATED. EDIT AT YOUR OWN PERIL.\n\n";
    content += stub;
    if (dbFile.existsSync()) {
      log.info("Database found, injecting additional information.");
      var enumVariants = await dbFile.readAsString();
      content = content.replaceAllMapped(
        RegExp(r'// <db-replace-token>.*// </db-replace-token>', dotAll: true),
        (match) => enumVariants,
      );
    } else {
      log.info("Database not found, compiling with stub information.");
    }
    await buildStep.writeAsString(target, content);
  }
}

Builder injectDB(BuilderOptions options) => DBInjector();
